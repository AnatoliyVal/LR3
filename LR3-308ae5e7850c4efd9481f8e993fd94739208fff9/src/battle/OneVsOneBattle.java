package battle;

import droid.Droid;
import java.util.List;
import java.util.Scanner;
import util.ColorConsole;

public class OneVsOneBattle extends Battle {
    private Scanner scanner;

    public OneVsOneBattle(Droid droid1, Droid droid2) {
        super(List.of(droid1), List.of(droid2));
        this.scanner = new Scanner(System.in);
    }

    @Override
    public void startBattle() {
        System.out.println(ColorConsole.PURPLE + "\n‚öîÔ∏è === –ü–û–ß–ê–¢–û–ö –ë–û–Æ 1 –ù–ê 1 ===" + ColorConsole.RESET);
        logAction("–ë—ñ–π –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –º—ñ–∂ " + team1.get(0).getName() + " —Ç–∞ " + team2.get(0).getName());

        int round = 1;
        while (!isBattleOver()) {
            System.out.println(ColorConsole.YELLOW + "\n--- –†–∞—É–Ω–¥ " + round + " ---" + ColorConsole.RESET);

            // –•—ñ–¥ –ø–µ—Ä—à–æ–≥–æ –¥—Ä–æ—ó–¥–∞
            if (team1.get(0).isAlive()) {
                playerTurn(team1.get(0), team2.get(0));
            }

            // –•—ñ–¥ –¥—Ä—É–≥–æ–≥–æ –¥—Ä–æ—ó–¥–∞
            if (team2.get(0).isAlive() && !isBattleOver()) {
                playerTurn(team2.get(0), team1.get(0));
            }

            regenerateEnergy();
            round++;
        }

        declareWinner();
    }

    private void playerTurn(Droid attacker, Droid defender) {
        System.out.println("\n" + ColorConsole.GREEN + "–•—ñ–¥ " + attacker.getName() + ColorConsole.RESET);
        System.out.println("1. –ê—Ç–∞–∫–∞");
        System.out.println("2. –°–ø–µ—Ü—ñ–∞–ª—å–Ω–∞ –∑–¥–∞—Ç–Ω—ñ—Å—Ç—å");
        System.out.println("3. –ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏ —Ö—ñ–¥");

        int choice = scanner.nextInt();
        switch (choice) {
            case 1:
                attacker.attack(defender);
                break;
            case 2:
                attacker.useSpecialAbility(defender);
                break;
            case 3:
                logAction(attacker.getName() + " –ø—Ä–æ–ø—É—Å–∫–∞—î —Ö—ñ–¥");
                break;
        }
    }

    @Override
    public boolean isBattleOver() {
        return !team1.get(0).isAlive() || !team2.get(0).isAlive();
    }

    private void declareWinner() {
        Droid winner = team1.get(0).isAlive() ? team1.get(0) : team2.get(0);
        System.out.println(ColorConsole.GREEN + "\nüéâ –ü–ï–†–ï–ú–û–ñ–ï–¶–¨: " + winner.getName() + "!" + ColorConsole.RESET);
        logAction("–ü–µ—Ä–µ–º–æ–∂–µ—Ü—å: " + winner.getName());
    }
}